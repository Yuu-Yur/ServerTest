//  설치3번, 순서1 Querydsl 버전을 변수로 만들어서 5.0.0버전
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.busanit501'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //1 롬복, 테스트 환경에서 동작하기.
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //2 타임리프, 공통 레이아웃 작업하는 동구.
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

    //3, 순서2 Querydsl 이용해서, 동적 sql 다루고, 빌드 패턴이용하고, 자바의 컴파일러 문법 체크 도움도 받기.
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    //3, 순서4 Querydsl 설정
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

    //4 modelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.1'

    //5 validation
    // 서버단에서 들어오는 데이터 유효성 검증 도구
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.0'

    //6 swagger UI
    // Restful 할때 화면을 그려주는 라이브러리
    // Spring boot 에 특화됨,spring 의 annotation 을 탐지
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.7.0'

    //7 thumbnailator
    // thumbnail 변환 도구
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'

    //8 security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.4.0'

    //9 security 와 thymeleaf 연동 권한별 화면 표시
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.2.RELEASE'

}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl  설치3, 순서3 프로젝트를 빌드 할 때마다, 해당 Q 도메인을 소스로 등록하는 과정을, 자동으로
sourceSets {

    main {
        java {
            srcDirs = ["/src/main/java", "/build/generated"]
        }
    }
}

// 설치3, 순서5 compileJava 하기 전에 빌드를 clean
compileJava.dependsOn('clean')
