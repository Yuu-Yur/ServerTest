@OneToMany
예) 게시글 1 : 댓글 N,
자바 버전에서는 방향성이 있다.
주체에따라서, 연관관계 설정이 달라진다.

댓글 입장에서 , @ManyToOne
기존의 데이터베이스 FK 를 설정하는 것과 동일함.
단방향으로 만 설정이 되어 있음.

게시글 1: 첨부 이미지들 : N
상위 엔티티 기준으로 연관관계를 설정.
게시글 입장, @OneToMany

장점.
- 상위에서 영속성(1차 캐시테이블), 게시글 삭제시, 하위 이미지들이 같이 삭제되거나,
- 위에서 아래 방향으로 작업이 조금 더 익숙하다.
- 분리해서 작업을 할수 있어서, 부가적인 설정하기가 편하다.
cascade 설정, 고아 객체 처리, N+1, 최적화등.

단점.
양방향으로 연관관계 설정에 대한 기초 지식이 필요함.


확인사항,
양방향이 됨.
게시글 입장 : @OneToMany
이미지들 입장 : @ManyToOne
게시글 1: 이미지들 N

JPA, 중간 테이블을 만들어줌.


연관관계 주인 설정.
자바, 데이터베이스와 다르게, 방향이 있어요.
누가 주체적으로 일을 할거냐?
mappedBy

메모,
만약, 중간 테이블을 이용하지 않고 설정하는 방법
- @OneToMany 부분에서, @JoinColumn 설정
- mappedBy 설정을 하면됨.

영속성 상태 관련 내용
- PERSIST(추가), REMOVE(제거) : 상위 엔티티가 처리될때(영속되다) 하위 엔티티도 처리가 됨.
- MERGE(병합), REFRESH(새로고침), DETACH(분리) : 상위 엔티티가 처리될때(영속되다) 하위 엔티티도 상태가 변경.
5가지 설정
- ALL : 상위 엔티티가 처리될때(영속되다) 하위 엔티티도 적용이 됨

1차 캐시 테이블 , 실제 테이블 , 동기화 놀이


지연로딩 ->
보드, 보드의 이미지들이  join 처리가 되어 있음.
1: N , 양방향,

지연로딩을 하더래도, 한 번에 조인을 처리해서 select가 이루어 지는 설정.
repository 에서 설정, 조회 시 특정 속성을 같이 조회하는 설정
엔티티 클래스에서 exclude 했더라도 강제로 조회하는 설정
즉 엔티티 클래스에서 하는 설정은 기본 설정이라고 할 수 있고
repository 에서 하는 설정은 필요 시 추가로 하는 설정
@EntityGraph(attributePaths = {"엔티티 필드명"})

OneToMany 관계설정되어있는 자식 테이블을 수정할 때
자식 테이블의 참조를 null 로 해버리고 orphanRemoval 로 즉시삭제 할 수 있다.


N+1 문제 발생,
1 : board 관련 select 조회,
N : 하나의 board 에대한, 각각 boardImage 들 또 select 함.
부모 테이블을 조회할 때 자식 테이블을 전체 조회하는 문제

: 모아서 처리 해줄게. IN 연산자를 이용해서, 한번에 지정한 갯수만큼씩만
조회를 할게, 매번 귀찮게 안할게.

해결책
@BatchSize , 어노테이션 이용해서,
데이터베이스를 매번 실행해서, 많이 사용함. 자원 소모 심함.
지정한 크기만큼만 쿼리를 모아서 한번에 실행하기.
db 에 가서 부모 테이블을 조회할 때 BatchSize 만큼 자식 테이블을 담아서 가져옴