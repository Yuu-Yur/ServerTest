주입방식
1) 필드 주입
@Autowired
private A a;

2) 생성자 주입
private final A a;

public Class(A a) {
 this.a = a;
} 이것을 annotation ReqArgCons를 사용하면 생략 가능

3) 메서드 주입(Setter)
private A a;

public void setClass(A a) {
 this.a = a;
}

초기엔 @Autowired 가 대세
Setter 작성 방식도 사용됨
스프링 3버전 이후에는 생성자 주입 방식이 대세
1)필드 기반 주입
@Autowired를 필드에 직접 선언 코드가 간결함 테스트하기 어려움, 불변 객체에 부적합

2)생성자 기반 주입
생성자를 통해 의존성을 주입 테스트 및 불변성 보장 가능 코드가 약간 길어짐
final로 선언함으로써 누락 시 컴파일러 에러를 일으켜 알기 쉽게 해줌

3)메서드 기반 주입
Setter 메서드를 통해 의존성을 주입 선택적 의존성 주입 가능
불변 객체에 부적합

생성자 주입 방식을 사용시, 주의사항,
1) 주입 받아야하는 객체의 변수는 final 로 작성.
2) 생성자를 이용해서 해당 변수를 생성자의 파라미터로 지정함.

큰 장점.
객체를 생성할 때 문제가 발생하면, 미리 확인도 가능하고,
필드 주입, 메서드 주입 방식 보다는 더 선호하는 이유.
